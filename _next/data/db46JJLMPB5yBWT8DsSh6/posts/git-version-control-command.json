{"pageProps":{"post":{"summary":null,"tags":["开发工具"],"id":"git-version-control-command","contentHtml":"<table>\n<thead>\n<tr>\n<th>操作</th>\n<th>命令</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>删除远程分支</td>\n<td>git push origin --delete branchName</td>\n</tr>\n<tr>\n<td>创建新分支</td>\n<td>git checkout -b dev</td>\n</tr>\n<tr>\n<td>推送新分支到远程</td>\n<td>git push origin dev</td>\n</tr>\n<tr>\n<td>在master上合并dev分支的代码</td>\n<td>git merge dev</td>\n</tr>\n<tr>\n<td>新建tag</td>\n<td>git tag -a v2.1 -m \"add v2.1 tag\"</td>\n</tr>\n<tr>\n<td>将新tag推送到远程</td>\n<td>git push origin v2.1</td>\n</tr>\n<tr>\n<td>将所有tag推送到远程</td>\n<td>git push origin --tags</td>\n</tr>\n<tr>\n<td>比较两个分支的修改差异</td>\n<td>git diff branchA branchB（显示文件内容差异） 或者 git diff branchA branchB --stat（显示有差异的文件列表）</td>\n</tr>\n</tbody>\n</table>\n<h2>如何回退已经提交到远程的代码版本</h2>\n<ol>\n<li>首先，使用</li>\n</ol>\n<blockquote>\n<p>git reflog</p>\n</blockquote>\n<p>查看所有提交的commit记录，确认自己想要回退到哪一个版本的id\n2. 使用</p>\n<blockquote>\n<p>git reset --soft xxxxx     // 版本回退，原来的修改仍在本地，等待继续修改或提交</p>\n</blockquote>\n<p>或者</p>\n<blockquote>\n<p>git reset --hard xxxxx    // 版本和原来的修改都回退到以前\n进行版本回退</p>\n</blockquote>\n<ol start=\"3\">\n<li>提交到远程</li>\n</ol>\n<blockquote>\n<p>git push --force</p>\n</blockquote>\n","date":"2016-01-04","title":"Git版本管理命令"},"prevPost":{"summary":null,"tags":["系统设计"],"id":"instant-message-system-design","title":"如何设计一个IM系统","date":"2016-01-06"},"nextPost":{"summary":null,"tags":["微服务"],"id":"what-is-iaas-paas-saas","title":"什么是IaaS、PaaS、SaaS","date":"2016-01-01"}},"__N_SSG":true}