{"pageProps":{"post":{"summary":null,"tags":["微服务"],"id":"command-query-event-cqrs-intro","contentHtml":"<p>此篇介绍一下CQRS模式的相关内容。</p>\n<!-- more -->\n<h1>微服务交互方式</h1>\n<p>在微服务设计中，一个Service与另外一个Service进行交互通常有三种方式：</p>\n<pre><code>1. 命令（Commands）\n2. 事件（Events）\n3. 查询（Queries）\n</code></pre>\n<p>Commands：命令是一个操作，是希望在另一个服务中执行某些操作的一个请求，命令期待有一个响应。\nEvents：事件既是一个事实也是一个触发器，事件表示发生了一些事情，类似于通知。\nQueries：查询是一个查找某些信息的请求（request），查询不会使得系统状态发生改变。</p>\n<p>从Service的角度来说，事件方式要比命令和查询方式更解耦一些。</p>\n<h1>命令查询职责分离(CQRS)模式</h1>\n<p>命令查询职责分离模式（Command Query Responsibility Segregation，CQRS），该模式从业务上分离了修改 (Command，增，删，改，会对系统状态进行修改)和查询（Query，查，不会对系统状态进行修改)的行为，使得逻辑更加清晰，从而便于对不同部分进行针对性的优化。</p>\n","date":"2015-05-29T00:00:00.000Z","title":"命令查询职责分离(CQRS)模式介绍"},"prevPost":{"summary":null,"tags":["Golang"],"id":"go-command-line-os-args-flag","title":"Go语言的命令行参数os.Args和flag包","date":"2015-06-01T00:00:00.000Z"},"nextPost":{"summary":null,"tags":["MySQL"],"id":"mysql-tips","title":"MySQL开发技巧","date":"2015-05-13T00:00:00.000Z"}},"__N_SSG":true}