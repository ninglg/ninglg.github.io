{"pageProps":{"post":{"summary":null,"tags":["Golang"],"id":"golang-strings","contentHtml":"<p>Go字符串处理</p>\n<h1>常用字符串处理函数</h1>\n<p>函数 | 作用\n--- | ---\nstrings.TrimSpace(str) | 去除字符串str两边的空格\nstrings.Trim(str, \"指定字符\") | 将字符串str两边的指定字符去除\nstrings.TrimLeft(str, \"指定字符\") | 将字符串左边的指定字符去除\nstrings.TrimRight(str, \"指定字符\") | 将字符串右边的指定字符去除\nstrings.HasPrefix(str, \"指定字符\") | 判断字符串是否以指定字符开头\nstrings.HasSuffix(str, \"指定字符\") | 判断字符串是否以指定字符结尾\nstrings.Compare(str1, str2) | 比较两个字符串大小\nstrings.Index(str, \"子串\") | 返回子串出现的第一个位置\nstrings.LastIndex(str, \"子串\") | 返回子串出现的最后一个位置\nstrings.Count(\"abcabcabababc\", \"abc\") | 统计子串在整体当中出现的次数\nstrings.Repeat(\"abc\", 10) | 将字符串重复指定的次数\nstrings.Replace(str, \"a\", \"b\", -1) | 替换字符串中的部分子串\nstrings.Split(str, \",\") | 分割字符串\nstrings.Join(slice, \",\") | 字符串拼接</p>\n<h1>字符串长度</h1>\n<pre><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\tstr := \"hello世界\"\n\tfmt.Println(len(str))         //输出11，一个汉字需要3个字节编码\n\tfmt.Println(len([]rune(str))) //输出7，rune表示单个Unicode字符\n}\n</code></pre>\n<h1>字符串转整数或浮点数</h1>\n<blockquote>\n<p>strconv.ParseInt()，可以指定转换的进制，以及返回的bit位数\nstrconv.Atoi()，默认按10进制转换，返回int型\nstrconv.ParseFloat()，可指定返回的bit位数</p>\n</blockquote>\n<h1>整数或浮点数转字符串</h1>\n<blockquote>\n<p>strconv.FormatInt()\nstrconv.Itoa()\nstrconv.FormatFloat()</p>\n</blockquote>\n<h1>字符串和bool型转换</h1>\n<blockquote>\n<p>strconv.ParseBool()\nstrconv.FormatBool()</p>\n</blockquote>\n<h1>字符串拼接的性能</h1>\n<p>字符串拼接常用的几种方式：</p>\n<pre><code>（1）使用strings.Builder：建议使用\n（2）使用bytes.Buffer：性能好，可读性差\n（3）使用copy\n（4）使用append\n（5）使用+号：性能居中，可读性好\n（6）使用strings.Repeat：适合合并大量重复的字符串\n（7）使用string.Join：性能较好\n（8）使用fmt.Sprintf：性能较差\n</code></pre>\n","date":"2016-05-27T10:00:00.000Z","title":"Go字符串处理","published":true,"hideInList":false,"feature":null,"isTop":false},"prevPost":{"summary":null,"tags":["MySQL"],"id":"postgresql-intro","title":"PostgreSQL 简介","date":"2016-07-06T10:00:00.000Z","published":true,"hideInList":false,"feature":null,"isTop":false},"nextPost":{"summary":null,"tags":["Golang"],"id":"golang-program-performance-analysis-tools","title":"Go程序性能分析工具","date":"2016-05-09T10:00:00.000Z","published":true,"hideInList":false,"feature":null,"isTop":false}},"__N_SSG":true}