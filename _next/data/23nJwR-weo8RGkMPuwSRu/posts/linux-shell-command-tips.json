{"pageProps":{"post":{"summary":null,"tags":["Linux"],"id":"linux-shell-command-tips","contentHtml":"<h2>$0、$1、$2、$#、$@、$*、$?</h2>\n<p>首先介绍一下 $0、$1、$2、$#、$@、$*、$? 的含义。</p>\n<p>比如执行以下命令：</p>\n<blockquote>\n<p>/bin/test.sh a b c</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>含义</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>$0</td>\n<td>表示文件路径和文件名</td>\n<td>/bin/test.sh</td>\n</tr>\n<tr>\n<td>$1、$2</td>\n<td>表示第几个参数</td>\n<td>如a、b，但如第10个要用${10}而非$10，$10相当于${1}0</td>\n</tr>\n<tr>\n<td>$#</td>\n<td>表示传入脚本的参数个数</td>\n<td>此处为3，统计不包括$0</td>\n</tr>\n<tr>\n<td>$@</td>\n<td>表示所有参数的列表</td>\n<td>此处\"a\"、\"b\"、\"c\"，不包括$0</td>\n</tr>\n<tr>\n<td>$*</td>\n<td>表示所有的参数</td>\n<td>其值和 $@ 相同，但区别在于 $* 把所有参数合并成一个字符串，而 $@ 会得到一个字符串参数数组</td>\n</tr>\n<tr>\n<td>$?</td>\n<td>表示执行脚本命令后的返回值</td>\n<td>命令执行成功时默认返回0</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<pre><code class=\"language-shell\">#!/bin/sh\n\nfor x in \"$@\"; do\necho $x\ndone\n\nfor x in \"$*\"; do\necho $x\ndone\n</code></pre>\n<p>执行 /bin/test.sh a b c 后输出：</p>\n<pre><code>a\nb\nc\na b c\n</code></pre>\n<h2>&#x26; 和 wait</h2>\n<blockquote>\n<p>&#x26;  当要执行的命令以 &#x26; 结尾时，这个命令会在后台子 shell 执行\nwait  当有多个耗时操作可以并发执行，且这些操作都执行完成后，再进行下一步操作，就可以使用 wait 命令来等待这些操作执行完成</p>\n</blockquote>\n<p>例如：</p>\n<pre><code class=\"language-shell\">command1 &#x26;\ncommand2 &#x26;\nwait\n</code></pre>\n","date":"2011-01-05T00:00:00.000Z","title":"Linux Shell命令技巧"},"prevPost":{"summary":null,"tags":["Linux"],"id":"byte-order-big-endian-little-endian","title":"字节序：大端和小端","date":"2011-01-10T00:00:00.000Z"},"nextPost":{"summary":null,"tags":["网络"],"id":"mac-address-learning-intro","title":"Mac地址学习的概念","date":"2011-01-03T00:00:00.000Z"}},"__N_SSG":true}