{"pageProps":{"post":{"summary":null,"tags":["Golang"],"id":"golang-strings","contentHtml":"<p>Go字符串处理</p>\n<!-- more -->\n<h1>常用字符串处理函数</h1>\n<table>\n<thead>\n<tr>\n<th>函数</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>strings.TrimSpace(str)</td>\n<td>去除字符串str两边的空格</td>\n</tr>\n<tr>\n<td>strings.Trim(str, \"指定字符\")</td>\n<td>将字符串str两边的指定字符去除</td>\n</tr>\n<tr>\n<td>strings.TrimLeft(str, \"指定字符\")</td>\n<td>将字符串左边的指定字符去除</td>\n</tr>\n<tr>\n<td>strings.TrimRight(str, \"指定字符\")</td>\n<td>将字符串右边的指定字符去除</td>\n</tr>\n<tr>\n<td>strings.HasPrefix(str, \"指定字符\")</td>\n<td>判断字符串是否以指定字符开头</td>\n</tr>\n<tr>\n<td>strings.HasSuffix(str, \"指定字符\")</td>\n<td>判断字符串是否以指定字符结尾</td>\n</tr>\n<tr>\n<td>strings.Compare(str1, str2)</td>\n<td>比较两个字符串大小</td>\n</tr>\n<tr>\n<td>strings.Index(str, \"子串\")</td>\n<td>返回子串出现的第一个位置</td>\n</tr>\n<tr>\n<td>strings.LastIndex(str, \"子串\")</td>\n<td>返回子串出现的最后一个位置</td>\n</tr>\n<tr>\n<td>strings.Count(\"abcabcabababc\", \"abc\")</td>\n<td>统计子串在整体当中出现的次数</td>\n</tr>\n<tr>\n<td>strings.Repeat(\"abc\", 10)</td>\n<td>将字符串重复指定的次数</td>\n</tr>\n<tr>\n<td>strings.Replace(str, \"a\", \"b\", -1)</td>\n<td>替换字符串中的部分子串</td>\n</tr>\n<tr>\n<td>strings.Split(str, \",\")</td>\n<td>分割字符串</td>\n</tr>\n<tr>\n<td>strings.Join(slice, \",\")</td>\n<td>字符串拼接</td>\n</tr>\n</tbody>\n</table>\n<h1>字符串长度</h1>\n<pre><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\tstr := \"hello世界\"\n\tfmt.Println(len(str))         //输出11，一个汉字需要3个字节编码\n\tfmt.Println(len([]rune(str))) //输出7，rune表示单个Unicode字符\n}\n</code></pre>\n<h1>字符串转整数或浮点数</h1>\n<blockquote>\n<p>strconv.ParseInt()，可以指定转换的进制，以及返回的bit位数\nstrconv.Atoi()，默认按10进制转换，返回int型\nstrconv.ParseFloat()，可指定返回的bit位数</p>\n</blockquote>\n<h1>整数或浮点数转字符串</h1>\n<blockquote>\n<p>strconv.FormatInt()\nstrconv.Itoa()\nstrconv.FormatFloat()</p>\n</blockquote>\n<h1>字符串和bool型转换</h1>\n<blockquote>\n<p>strconv.ParseBool()\nstrconv.FormatBool()</p>\n</blockquote>\n<h1>字符串拼接的性能</h1>\n<p>字符串拼接常用的几种方式：</p>\n<pre><code>（1）使用strings.Builder：建议使用\n（2）使用bytes.Buffer：性能好，可读性差\n（3）使用copy\n（4）使用append\n（5）使用+号：性能居中，可读性好\n（6）使用strings.Repeat：适合合并大量重复的字符串\n（7）使用string.Join：性能较好\n（8）使用fmt.Sprintf：性能较差\n</code></pre>\n","date":"2016-05-27T00:00:00.000Z","title":"Go字符串处理"},"prevPost":{"summary":null,"tags":["MySQL"],"id":"postgresql-intro","title":"PostgreSQL 简介","date":"2016-07-06T00:00:00.000Z"},"nextPost":{"summary":null,"tags":["Golang"],"id":"golang-program-performance-analysis-tools","title":"Go程序性能分析工具","date":"2016-05-09T00:00:00.000Z"}},"__N_SSG":true}