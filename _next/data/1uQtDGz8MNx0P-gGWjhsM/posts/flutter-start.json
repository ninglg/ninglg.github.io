{"pageProps":{"post":{"summary":null,"tags":["Flutter"],"id":"flutter-start","contentHtml":"<p>此篇介绍初期学习Flutter的一些知识。</p>\n<h2>环境安装</h2>\n<ol>\n<li>由于国内访问限制，首先需要设置Flutter镜像环境变量（解决被墙导致的失败问题）</li>\n</ol>\n<pre><code>export PUB_HOSTED_URL=https://pub.flutter-io.cn\nexport FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn\n</code></pre>\n<ol start=\"2\">\n<li>下载Flutter SDK</li>\n</ol>\n<blockquote>\n<p>git clone -b stable https://github.com/flutter/flutter.git</p>\n</blockquote>\n<p>并将Flutter的Bin目录加入到PATH中</p>\n<blockquote>\n<p>export PATH=<code>pwd</code>/flutter/bin:$PATH</p>\n</blockquote>\n<ol start=\"3\">\n<li>运行 flutter doctor 命令检查环境是否已正确配置，如有错误需逐项解决</li>\n</ol>\n<p>macOS 可以允许开发 iOS、Android 和 Web（技术预览版正式发布）三个平台的 Flutter 应用</p>\n<ol start=\"4\">\n<li>\n<p>要为Android开发Flutter应用，需要在电脑上安装和配置Android Studio，并在手机设备上启用“开发人员选项”和“USB调试”。或者使用Visual Studio Code，并安装flutter插件使用</p>\n</li>\n<li>\n<p>如使用VSCode，“查看”——“命令面板”——“Flutter：New Project”创建新的Flutter项目，使用“调试”——“启动调试”可以传输包到模拟器上，并显示效果，修改后还可以使用热重载观看修改后的效果</p>\n</li>\n</ol>\n<h2>示例代码</h2>\n<p>第一个Flutter应用的代码：startup_name_generator</p>\n<pre><code class=\"language-dart\">import 'package:flutter/material.dart';\nimport 'package:english_words/english_words.dart';\n\nvoid main() => runApp(new MyApp());\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return new MaterialApp(\n      title: 'Startup Name Generator',\n      theme: new ThemeData(\n        primaryColor: Colors.white,\n      ),\n      home: new RandomWords(),\n    );\n  }\n}\n\nclass RandomWords extends StatefulWidget {\n  @override\n  createState() => new RandomWordsState();\n}\n\nclass RandomWordsState extends State&#x3C;RandomWords> {\n  final _suggestions = &#x3C;WordPair>[];\n\n  final _saved = new Set&#x3C;WordPair>();\n\n  final _biggerFont = const TextStyle(fontSize: 18.0);\n\n  @override\n  Widget build(BuildContext context) {\n    return new Scaffold(\n      appBar: new AppBar(\n        title: new Text('Startup Name Generator'),\n        actions: &#x3C;Widget>[\n          new IconButton(icon: new Icon(Icons.list), onPressed: _pushSaved)\n        ],\n      ),\n      body: _buildSuggestions(),\n    );\n  }\n\n  Widget _buildSuggestions() {\n    return new ListView.builder(\n      padding: const EdgeInsets.all(16.0),\n      itemBuilder: (context, i) {\n        if (i.isOdd) return new Divider();\n\n        final index = i ~/ 2;\n        if (index >= _suggestions.length) {\n          _suggestions.addAll(generateWordPairs().take(10));\n        }\n        return _buildRow(_suggestions[index]);\n      },\n    );\n  }\n\n  Widget _buildRow(WordPair pair) {\n    final alreadySaved = _saved.contains(pair);\n    return new ListTile(\n      title: new Text(\n        pair.asPascalCase,\n        style: _biggerFont,\n      ),\n      trailing: new Icon(\n        alreadySaved ? Icons.favorite : Icons.favorite_border,\n        color: alreadySaved ? Colors.red : null,\n      ),\n      onTap: () {\n        setState(\n              () {\n            if (alreadySaved) {\n              _saved.remove(pair);\n            } else {\n              _saved.add(pair);\n            }\n          },\n        );\n      },\n    );\n  }\n\n  void _pushSaved() {\n    Navigator.of(context).push(\n      new MaterialPageRoute(\n        builder: (context) {\n          final tiles = _saved.map(\n                (pair) {\n              return new ListTile(\n                title: new Text(\n                  pair.asPascalCase,\n                  style: _biggerFont,\n                ),\n              );\n            },\n          );\n          final divided = ListTile\n              .divideTiles(\n            context: context,\n            tiles: tiles,\n          )\n              .toList();\n\n          return new Scaffold(\n            appBar: new AppBar(\n              title: new Text('Saved Suggestions'),\n            ),\n            body: new ListView(children: divided),\n          );\n        },\n      ),\n    );\n  }\n}\n</code></pre>\n<h2>简单命令</h2>\n<pre><code>flutter create myapp   //创建Flutter工程\nflutter devices  //查看运行的设备\nflutter run  //运行应用程序\nflutter build ios --debug  //iOS debug模式打包\nflutter build ios --release  //iOS release模式打包(release包不能在模拟器上正常运行)\nflutter channel  //查看当前channel\nflutter channel beta //切换到beta channel\nflutter upgrade  //升级\n</code></pre>\n<h1>将项目运行在模拟器上</h1>\n<ol>\n<li>注意Project name必须以小写字母开头，而且不可以有空格。</li>\n</ol>\n<h1>Flutter的热修复特性</h1>\n<ol>\n<li>Flutter具有热修复（在某些情况下称之为热重载）特性。所谓热修复，是指无需重新启动App，即可快速的将修改后的源代码文件注入正在运行的Dart虚拟机中，而Dart虚拟机会立即套用修改后的代码。</li>\n<li>Flutter框架会自动重新构建组件树实现热修复。</li>\n<li>有几种情况下无法执行热修复：\n（1）代码编译错误\n（2）修改后的代码影响了修改前的状态（即数据）\n（3）对于静态字段如final修饰的常量值，在修改后不会变化，仍未修改前的值\n（4）对于UI组件，如果修改后的代码不会因为重新构建Widget组件树而被重新执行的话，热修复就对其不起作用，并且不会抛出任何异常\n（5）枚举类型更改为常规类，或常规类更改为枚举类型，都会导致热修复失败\n（6）更改泛型类型声明会导致热修复失败</li>\n</ol>\n<h1>升级Flutter</h1>\n<p>1、升级Flutter SDK可以执行命令</p>\n<blockquote>\n<p>flutter upgrade</p>\n</blockquote>\n<p>命令会获取最新稳定版本，并在升级后自动执行flutter doctor命令来检查环境配置</p>\n<ol start=\"2\">\n<li>升级依赖库\nApp可能会依赖多个库，这些库在pubspec.yaml文件中被列出。如果要获取依赖库，需要执行命令：</li>\n</ol>\n<blockquote>\n<p>flutter packages get</p>\n</blockquote>\n<p>如果想升级依赖库到最新版本，需要执行命令：</p>\n<blockquote>\n<p>flutter packages upgrade</p>\n</blockquote>\n<h1>命令行编译包</h1>\n<p>生成Android平台App包：</p>\n<blockquote>\n<p>flutter build apk</p>\n</blockquote>\n<p>生成iOS平台App包：</p>\n<blockquote>\n<p>flutter build ios</p>\n</blockquote>\n<p>显示可用设备（已连接到开发计算机）</p>\n<blockquote>\n<p>flutter devices</p>\n</blockquote>\n<p>在devices列表中的第一个设备上编译并以调试模式（默认模式）运行</p>\n<blockquote>\n<p>flutter run</p>\n</blockquote>\n<p>或者指定特定设备ID</p>\n<blockquote>\n<p>flutter run -d 000507e0a52252f43eaa151dcbc4ebfa52bd92f0</p>\n</blockquote>\n<p>在chrome上运行</p>\n<blockquote>\n<p>flutter run -d chrome</p>\n</blockquote>\n","date":"2020-10-28T10:00:00.000Z","title":"Flutter开发环境","published":true,"hideInList":false,"feature":null,"isTop":false},"prevPost":{"summary":null,"tags":["Flutter"],"id":"dart-start","title":"Flutter Dart语言基础","date":"2020-11-09T10:00:00.000Z","published":true,"hideInList":false,"feature":null,"isTop":false},"nextPost":{"summary":null,"tags":["Flutter"],"id":"flutter-intro","title":"Flutter简介","date":"2020-10-17T10:00:00.000Z","published":true,"hideInList":false,"feature":null,"isTop":false}},"__N_SSG":true}