{"pageProps":{"post":{"summary":null,"tags":["系统设计"],"id":"how-to-implement-timing-task-scheduler","contentHtml":"<p>此篇介绍一下如何简单实现定时任务调度器。</p>\n<p>实现定时任务调度器，最关键的如何对任务的时间进行判断和调度。</p>\n<h2>顺序遍历</h2>\n<p>对所有任务进行顺序遍历，进行时间判断和调度，虽然简单，但明显不是时间最优的方法。</p>\n<h2>优先级队列</h2>\n<p>使用时间作为优先级，只需要查询时间最接近当前时间的队列数据即可。\n优先级队列一般使用堆结构进行实现，时间复杂度LogN。</p>\n<h2>时间轮</h2>\n<p>时间轮是一个环形队列，按照时间的单位进行区分。比如每个单位是1s，然后一个单位里挂载一个链表，用来存储定时任务。\n如果时间超过了一个环形队列的长度，那么可以使用多级时间轮进行优化。比如第一层的走一圈时，第二层的走一格，有点类似于水表的那种表示。\n最终时间复杂度为O(1)。</p>\n","date":"2013-12-31T10:00:00.000Z","title":"定时任务调度器的设计","published":true,"hideInList":false,"feature":null},"prevPost":{"summary":null,"tags":["工作"],"id":"how-to-do-1on1-well","title":"1on1沟通应该怎么做","date":"2014-01-01T10:00:00.000Z","published":true,"hideInList":false,"feature":null,"isTop":false},"nextPost":{"summary":null,"tags":["Redis"],"id":"redis-key-ttl-expire","title":"Redis Key的过期","date":"2013-10-21T10:00:00.000Z","published":true,"hideInList":false,"feature":null,"isTop":false}},"__N_SSG":true}